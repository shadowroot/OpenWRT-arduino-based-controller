/*
 * json.h
 *
 *  Created on: 7. 2. 2014
 *      Author: jonny
 */

#include <stdio.h>

#ifndef JSON_H_
#define JSON_H_

#define TYPE_OBJECT 0
#define TYPE_STRING 1
#define TYPE_INT 2
#define TYPE_BOOL 3

#define TRUE 1
#define FALSE 0

/**
 * Referencing strings and length and referencing.
 */
typedef struct{
	char * string;
	int length;
	int references;
}STRING;

/**
 * Describing JSON Object with tokenizer. Each token describes parama and value pair.
 */
struct TObject{
	struct TToken* tokens;
};
/**
 * Describing array of values it means values of type
 */
struct TArray{
	union TVALUE* values;
	char type;
	int size;
};
/**
 * Values union it means it's acting as one type
 */
union TVALUE{
	STRING * string;
	int integer;
	struct TObject * object;
	struct TArray * array;
	char bool;
};

/**
 * Tokens of params and values with one direction linked list
 */
struct TToken{
	char * param;
	char type;
	union TVALUE value;
	struct TToken * next;
};

#endif /* JSON_H_ */
