/*
 * utils.c
 *
 *  Created on: 15. 2. 2014
 *      Author: jonny
 */


#include "utils.h"
/**
 * Error message
 * @param msg
 * @param err
 */
void error_message(const char * msg){
	fprintf(stderr,msg,errno);
}

/**
 * Initializing utils
 * session file
 * log file
 *
 * @return -1 error
 * 0 OK
 */
int init_utils(){
	if(!LOG_FILE){
		LOG_FILE = fopen(LOG_PATH,"a+");
		SESSION_FILE= fopen(SESSION_PATH,"a+");

		if(!LOG_FILE){
			error_message("Logfile cannot be created");
			return -1;
		}
		if(!SESSION_FILE){
			error_message("Session file cannot be created");
			return -1;
		}
	}

	return 0;
}


/**
 * Logging
 * @param level
 * @param msg
 */
void log(int level,const char * msg){
	struct time_t now = time(NULL);
	char * str_log_level = NULL;

	switch(level){
		case LOG_E:
			str_log_level = "ERROR";
			break;
		case LOG_I:
			str_log_level = "INFO";
			break;
		case LOG_W:
			str_log_level = "WARN";
			break;
	}

	fprintf(LOG_FILE,"[ %s ] [ %s ]  %s ",ctime(&now),str_log_level,msg);
}

int parseCOOKIE(char ** buffer_in,char ** param,char ** value){
	char * token = NULL;
		token = strtok(*buffer_in,";");
		if(!token){
			return -1;
		}
		*value = token;
		*param = strtok(*value,"=");
	return 0;
}




int parseREQUEST(char ** buffer_in,char ** param,char ** value){
	char * token = NULL;
		token = strtok(*buffer_in,"&");
		if(!token){
			return -1;
		}
		*value = token;
		*param = strtok(*value,"=");

	return 0;
}
